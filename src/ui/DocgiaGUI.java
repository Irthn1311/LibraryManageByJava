/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import DAO.DocGiaDAO;
import DTO.DocGiaDTO;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;

/**
 *
 * @author dinhp
 */
public class DocgiaGUI extends javax.swing.JPanel {
    private DocGiaDAO docGiaDAO;
    private ArrayList<DocGiaDTO> listDocGia;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    
    /**
     * Creates new form Intro
     */
    public DocgiaGUI() {
        initComponents();
        setupComponents();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        TenDG = new javax.swing.JLabel();
        Gioitinh = new javax.swing.JLabel();
        Ngaysinh = new javax.swing.JLabel();
        Sdt = new javax.swing.JLabel();
        txtTenDG = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        cbGioitinh = new javax.swing.JComboBox<>();
        Ma_ttv = new javax.swing.JLabel();
        txtMa_ttv = new javax.swing.JTextField();
        Ngaycap = new javax.swing.JLabel();
        Ngayhethan = new javax.swing.JLabel();
        txtNgayhethan = new com.toedter.calendar.JDateChooser();
        txtNgaycap = new com.toedter.calendar.JDateChooser();
        txtNgaysinh = new com.toedter.calendar.JDateChooser();
        btnThem = new javax.swing.JButton();
        btnCapnhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnKhoiphuc = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Timkiem = new javax.swing.JLabel();
        txtTimkiem = new javax.swing.JTextField();
        btnTimkiem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDocgia = new javax.swing.JTable();
        DiaChi = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1210, 640));

        jPanel1.setPreferredSize(new java.awt.Dimension(1210, 640));

        jPanel2.setPreferredSize(new java.awt.Dimension(1210, 640));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        TenDG.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TenDG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TenDG.setText("Tên độc giả:");

        Gioitinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Gioitinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Gioitinh.setText("Giới tính:");

        Ngaysinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Ngaysinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Ngaysinh.setText("Ngày sinh:");

        Sdt.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Sdt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Sdt.setText("Số điện thoại:");

        txtTenDG.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTenDG.setText("jTextField1");

        txtSdt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSdt.setText("jTextField1");

        cbGioitinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbGioitinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        Ma_ttv.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Ma_ttv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Ma_ttv.setText("Mã thẻ:");

        txtMa_ttv.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMa_ttv.setText("jTextField1");

        Ngaycap.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Ngaycap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Ngaycap.setText("Ngày cấp:");

        Ngayhethan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Ngayhethan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Ngayhethan.setText("Ngày hết hạn:");

        DiaChi.setFont(new java.awt.Font("Arial", 1, 14));
        DiaChi.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DiaChi.setText("Địa chỉ:");

        txtDiaChi.setFont(new java.awt.Font("Arial", 0, 14));
        txtDiaChi.setText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Gioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenDG))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenDG, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbGioitinh, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSdt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(Ma_ttv)
                                .addGap(28, 28, 28)
                                .addComponent(txtMa_ttv, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Ngaycap, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ngayhethan))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNgaycap, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(txtNgayhethan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(100, 100, 100))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMa_ttv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ma_ttv))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Ngaycap)
                                            .addComponent(txtNgaycap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Ngayhethan)
                                            .addComponent(txtNgayhethan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Gioitinh)
                                            .addComponent(cbGioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Sdt)
                                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTenDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TenDG)))
                        .addGap(28, 28, 28)
                        .addComponent(Ngaysinh))
                    .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnThem.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnThem.setContentAreaFilled(false);

        btnCapnhat.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnCapnhat.setText("Cập nhật");
        btnCapnhat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnCapnhat.setContentAreaFilled(false);

        btnXoa.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnXoa.setContentAreaFilled(false);

        btnKhoiphuc.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnKhoiphuc.setText("Khôi phục");
        btnKhoiphuc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnKhoiphuc.setContentAreaFilled(false);

        jPanel4.setBackground(new java.awt.Color(0, 122, 77));

        Timkiem.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        Timkiem.setForeground(new java.awt.Color(255, 255, 255));
        Timkiem.setText("Tìm kiếm:");

        txtTimkiem.setBackground(new java.awt.Color(238, 242, 240));
        txtTimkiem.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtTimkiem.setText("jTextField9");

        btnTimkiem.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btnTimkiem.setForeground(new java.awt.Color(0, 122, 77));
        btnTimkiem.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Timkiem)
                .addGap(18, 18, 18)
                .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Timkiem)
                    .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimkiem))
                .addGap(10, 10, 10))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbDocgia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbDocgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã ĐG", "Tên độc giả", "Giới tính", "Số điện thoại", "Tuổi", "Địa chỉ", "Mã thẻ", "Ngày cấp", "Ngày hết hạn", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, 
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class, 
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDocgia.setGridColor(new java.awt.Color(0, 0, 0));
        tbDocgia.setRowHeight(35);
        tbDocgia.setSelectionBackground(new java.awt.Color(204, 255, 204));
        tbDocgia.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tbDocgia.setShowVerticalLines(true);
        jScrollPane1.setViewportView(tbDocgia);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCapnhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnKhoiphuc, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnCapnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnKhoiphuc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setupComponents() {
        // Khởi tạo DAO
        docGiaDAO = new DocGiaDAO();
        
        // Xóa text mặc định
        txtTenDG.setText("");
        txtSdt.setText("");
        txtMa_ttv.setText("");
        txtTimkiem.setText("");
        
        // Thêm sự kiện cho các nút
        btnThem.addActionListener(e -> themDocGia());
        btnCapnhat.addActionListener(e -> capNhatDocGia());
        btnXoa.addActionListener(e -> xoaDocGia());
        btnKhoiphuc.addActionListener(e -> khoiPhucDocGia());
        btnTimkiem.addActionListener(e -> timKiemDocGia());
        
        // Thêm sự kiện cho bảng
        tbDocgia.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                hienThiChiTietDocGia();
            }
        });
    }
    
    private void loadDataToTable() {
        listDocGia = docGiaDAO.getList();
        DefaultTableModel model = (DefaultTableModel) tbDocgia.getModel();
        model.setRowCount(0);
        
        for (DocGiaDTO dg : listDocGia) {
            model.addRow(new Object[]{
                dg.getMaDG(),
                dg.getTenDG(),
                dg.getGioiTinh(),
                dg.getSoDienThoai(),
                tinhTuoi(dg.getNgaySinh()),
                dg.getDiaChi(),
                dg.getMaThe(),
                dg.getNgayCap() != null ? sdf.format(dg.getNgayCap()) : "",
                dg.getNgayHetHan() != null ? sdf.format(dg.getNgayHetHan()) : "",
                dg.isTrangThai() ? "Hoạt động" : "Đã khóa"
            });
        }
    }
    
    private int tinhTuoi(Date ngaySinh) {
        if (ngaySinh == null) return 0;
        return java.time.LocalDate.now().getYear() - 
               (ngaySinh.getYear() + 1900);
    }
    
    private void hienThiChiTietDocGia() {
        int selectedRow = tbDocgia.getSelectedRow();
        if (selectedRow >= 0) {
            DocGiaDTO dg = listDocGia.get(selectedRow);
            txtTenDG.setText(dg.getTenDG());
            cbGioitinh.setSelectedItem(dg.getGioiTinh());
            txtSdt.setText(dg.getSoDienThoai());
            txtDiaChi.setText(dg.getDiaChi());
            txtMa_ttv.setText(dg.getMaThe());
            txtNgaysinh.setDate(dg.getNgaySinh());
            txtNgaycap.setDate(dg.getNgayCap());
            txtNgayhethan.setDate(dg.getNgayHetHan());
        }
    }
    
    private void themDocGia() {
        try {
            DocGiaDTO dg = layThongTinForm();
            if (dg == null) return;
            
            // Tạo mã độc giả mới
            dg.setMaDG("DG" + System.currentTimeMillis());
            dg.setTrangThai(true);
            
            if (docGiaDAO.add(dg)) {
                JOptionPane.showMessageDialog(this, "Thêm độc giả thành công!");
                loadDataToTable();
                xoaForm();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm độc giả thất bại!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }
    
    private void capNhatDocGia() {
        try {
            int selectedRow = tbDocgia.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn độc giả cần cập nhật!");
                return;
            }
            
            DocGiaDTO dg = layThongTinForm();
            if (dg == null) return;
            
            dg.setMaDG(listDocGia.get(selectedRow).getMaDG());
            dg.setTrangThai(listDocGia.get(selectedRow).isTrangThai());
            
            if (docGiaDAO.update(dg)) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }
    
    private void xoaDocGia() {
        int selectedRow = tbDocgia.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn độc giả cần xóa!");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Bạn có chắc muốn xóa độc giả này?", 
                "Xác nhận xóa", 
                JOptionPane.YES_NO_OPTION);
                
        if (confirm == JOptionPane.YES_OPTION) {
            String maDG = listDocGia.get(selectedRow).getMaDG();
            if (docGiaDAO.delete(maDG)) {
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                // Cập nhật trạng thái trong listDocGia
                listDocGia.get(selectedRow).setTrangThai(false);
                // Cập nhật hiển thị trong bảng
                DefaultTableModel model = (DefaultTableModel) tbDocgia.getModel();
                model.setValueAt("Đã khóa", selectedRow, 9); // 9 là cột trạng thái
                xoaForm();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại!");
            }
        }
    }
    
    private void khoiPhucDocGia() {
        String maCanKhoiPhuc = JOptionPane.showInputDialog(this, 
                "Nhập mã độc giả cần khôi phục:");
        if (maCanKhoiPhuc != null && !maCanKhoiPhuc.trim().isEmpty()) {
            if (docGiaDAO.restore(maCanKhoiPhuc)) {
                JOptionPane.showMessageDialog(this, "Khôi phục thành công!");
                // Tải lại toàn bộ dữ liệu
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Khôi phục thất bại!");
            }
        }
    }
    
    private void timKiemDocGia() {
        String keyword = txtTimkiem.getText().trim();
        if (!keyword.isEmpty()) {
            listDocGia = docGiaDAO.search(keyword);
            DefaultTableModel model = (DefaultTableModel) tbDocgia.getModel();
            model.setRowCount(0);
            
            for (DocGiaDTO dg : listDocGia) {
                model.addRow(new Object[]{
                    dg.getMaDG(),
                    dg.getTenDG(),
                    dg.getGioiTinh(),
                    dg.getSoDienThoai(),
                    tinhTuoi(dg.getNgaySinh()),
                    dg.getDiaChi(),
                    dg.getMaThe(),
                    dg.getNgayCap() != null ? sdf.format(dg.getNgayCap()) : "",
                    dg.getNgayHetHan() != null ? sdf.format(dg.getNgayHetHan()) : "",
                    dg.isTrangThai() ? "Hoạt động" : "Đã khóa"
                });
            }
        } else {
            loadDataToTable();
        }
    }
    
    private DocGiaDTO layThongTinForm() {
        String tenDG = txtTenDG.getText().trim();
        String gioiTinh = (String) cbGioitinh.getSelectedItem();
        String sdt = txtSdt.getText().trim();
        String diaChi = txtDiaChi.getText().trim();
        String maThe = txtMa_ttv.getText().trim();
        Date ngaySinh = txtNgaysinh.getDate();
        Date ngayCap = txtNgaycap.getDate();
        Date ngayHetHan = txtNgayhethan.getDate();
        
        if (tenDG.isEmpty() || ngaySinh == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin bắt buộc (Tên và Ngày sinh)!");
            return null;
        }
        
        // Nếu có mã thẻ thì phải có ngày cấp và ngày hết hạn
        if (maThe != null && !maThe.trim().isEmpty()) {
            if (ngayCap == null || ngayHetHan == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin thẻ (Ngày cấp và Ngày hết hạn)!");
                return null;
            }
        }
        
        return new DocGiaDTO("", tenDG, gioiTinh, sdt, ngaySinh, diaChi, 
                maThe, ngayCap, ngayHetHan, true);
    }
    
    private void xoaForm() {
        txtTenDG.setText("");
        cbGioitinh.setSelectedIndex(0);
        txtSdt.setText("");
        txtDiaChi.setText("");
        txtMa_ttv.setText("");
        txtNgaysinh.setDate(null);
        txtNgaycap.setDate(null);
        txtNgayhethan.setDate(null);
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocgiaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            JFrame frame = new JFrame("Quản lý độc giả");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.add(new DocgiaGUI());
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Gioitinh;
    private javax.swing.JLabel Ma_ttv;
    private javax.swing.JLabel Ngaycap;
    private javax.swing.JLabel Ngayhethan;
    private javax.swing.JLabel Ngaysinh;
    private javax.swing.JLabel Sdt;
    private javax.swing.JLabel TenDG;
    private javax.swing.JLabel Timkiem;
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnKhoiphuc;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbGioitinh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDocgia;
    private javax.swing.JTextField txtMa_ttv;
    private com.toedter.calendar.JDateChooser txtNgaycap;
    private com.toedter.calendar.JDateChooser txtNgayhethan;
    private com.toedter.calendar.JDateChooser txtNgaysinh;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTenDG;
    private javax.swing.JTextField txtTimkiem;
    private javax.swing.JLabel DiaChi;
    private javax.swing.JTextField txtDiaChi;
    // End of variables declaration//GEN-END:variables
}
