/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import DAO.DocGiaDAO;
import DTO.DocGiaDTO;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;

/**
 *
 * @author dinhp
 */
public class DocgiaGUI extends javax.swing.JPanel {
    private DocGiaDAO docGiaDAO;
    private ArrayList<DocGiaDTO> listDocGia;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    
    /**
     * Creates new form Intro
     */
    public DocgiaGUI() {
        initComponents();
        setupComponents();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlContent = new javax.swing.JPanel();
        pnlForm = new javax.swing.JPanel();
        lblTenDocGia = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        lblSoDienThoai = new javax.swing.JLabel();
        txtTenDocGia = new javax.swing.JTextField();
        txtSoDienThoai = new javax.swing.JTextField();
        cboGioiTinh = new javax.swing.JComboBox<>();
        lblMaThe = new javax.swing.JLabel();
        txtMaThe = new javax.swing.JTextField();
        lblNgayCap = new javax.swing.JLabel();
        lblNgayHetHan = new javax.swing.JLabel();
        dateNgayHetHan = new com.toedter.calendar.JDateChooser();
        dateNgayCap = new com.toedter.calendar.JDateChooser();
        dateNgaySinh = new com.toedter.calendar.JDateChooser();
        btnReset = new javax.swing.JButton();
        lblDiaChi = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnKhoiPhuc = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        cboTimKiem = new javax.swing.JComboBox<>();
        scrTable = new javax.swing.JScrollPane();
        tblDocGia = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1210, 640));

        pnlMain.setPreferredSize(new java.awt.Dimension(1210, 640));

        pnlContent.setPreferredSize(new java.awt.Dimension(1210, 640));

        pnlForm.setBackground(new java.awt.Color(255, 255, 255));
        pnlForm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        lblTenDocGia.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTenDocGia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTenDocGia.setText("Tên độc giả:");

        lblGioiTinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblGioiTinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGioiTinh.setText("Giới tính:");

        lblNgaySinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgaySinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNgaySinh.setText("Ngày sinh:");

        lblSoDienThoai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSoDienThoai.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSoDienThoai.setText("Số điện thoại:");

        txtTenDocGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtSoDienThoai.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cboGioiTinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        lblMaThe.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblMaThe.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaThe.setText("Mã thẻ:");

        txtMaThe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblNgayCap.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgayCap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNgayCap.setText("Ngày cấp:");

        lblNgayHetHan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNgayHetHan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNgayHetHan.setText("Ngày hết hạn:");

        btnReset.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnReset.setText("Reset");

        lblDiaChi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDiaChi.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDiaChi.setText("Địa chỉ");

        txtDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenDocGia))
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiaChi))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE))
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                                .addComponent(lblMaThe)
                                .addGap(28, 28, 28)
                                .addComponent(txtMaThe, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNgayCap, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNgayHetHan))
                                .addGap(28, 28, 28)
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateNgayCap, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(dateNgayHetHan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(100, 100, 100))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(btnReset))))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaThe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaThe))
                        .addGap(25, 25, 25)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNgayCap)
                            .addComponent(dateNgayCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNgayHetHan)
                            .addComponent(dateNgayHetHan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTenDocGia))
                        .addGap(24, 24, 24)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGioiTinh)
                            .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSoDienThoai)
                            .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNgaySinh)
                    .addComponent(dateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiaChi)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnThem.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnThem.setContentAreaFilled(false);

        btnCapNhat.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnCapNhat.setContentAreaFilled(false);

        btnXoa.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnXoa.setContentAreaFilled(false);

        btnKhoiPhuc.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btnKhoiPhuc.setText("Khôi phục");
        btnKhoiPhuc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        btnKhoiPhuc.setContentAreaFilled(false);

        pnlSearch.setBackground(new java.awt.Color(0, 122, 77));

        lblTimKiem.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lblTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        lblTimKiem.setText("Tìm kiếm:");

        txtTimKiem.setBackground(new java.awt.Color(238, 242, 240));
        txtTimKiem.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        btnTimKiem.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(0, 122, 77));
        btnTimKiem.setText("Tìm kiếm");

        cboTimKiem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Mã độc giả", "Tên độc giả", "Số điện thoại", "Địa chỉ", "Mã thẻ" }));

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTimKiem)
                .addGap(18, 18, 18)
                .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimKiem)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem)
                    .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        scrTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblDocGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã ĐG", "Tên độc giả", "Giới tính", "Số điện thoại", "Tuổi", "Địa chỉ", "Mã thẻ", "Ngày cấp", "Ngày hết hạn", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDocGia.setGridColor(new java.awt.Color(0, 0, 0));
        tblDocGia.setRowHeight(35);
        tblDocGia.setSelectionBackground(new java.awt.Color(204, 255, 204));
        tblDocGia.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tblDocGia.setShowVerticalLines(true);
        scrTable.setViewportView(tblDocGia);
        if (tblDocGia.getColumnModel().getColumnCount() > 0) {
            tblDocGia.getColumnModel().getColumn(0).setMinWidth(20);
            tblDocGia.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblDocGia.getColumnModel().getColumn(2).setMinWidth(10);
            tblDocGia.getColumnModel().getColumn(2).setPreferredWidth(20);
            tblDocGia.getColumnModel().getColumn(3).setPreferredWidth(40);
            tblDocGia.getColumnModel().getColumn(4).setPreferredWidth(20);
            tblDocGia.getColumnModel().getColumn(6).setPreferredWidth(30);
            tblDocGia.getColumnModel().getColumn(7).setPreferredWidth(40);
            tblDocGia.getColumnModel().getColumn(8).setPreferredWidth(40);
            tblDocGia.getColumnModel().getColumn(9).setPreferredWidth(50);
        }

        javax.swing.GroupLayout pnlContentLayout = new javax.swing.GroupLayout(pnlContent);
        pnlContent.setLayout(pnlContentLayout);
        pnlContentLayout.setHorizontalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContentLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrTable)
                    .addComponent(pnlSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlContentLayout.createSequentialGroup()
                        .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnKhoiPhuc, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        pnlContentLayout.setVerticalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlContentLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnKhoiPhuc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(pnlSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(scrTable, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addComponent(pnlContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setupComponents() {
        // Khởi tạo DAO
        docGiaDAO = new DocGiaDAO();
        
        // Xóa text mặc định
        txtTenDocGia.setText("");
        txtSoDienThoai.setText("");
        txtDiaChi.setText("");
        txtMaThe.setText("");
        txtTimKiem.setText("");
        
        // Thêm sự kiện cho các nút
        btnReset.addActionListener(e -> xoaDuLieuForm());
        btnThem.addActionListener(e -> themDocGia());
        btnCapNhat.addActionListener(e -> capNhatDocGia());
        btnXoa.addActionListener(e -> xoaDocGia());
        btnKhoiPhuc.addActionListener(e -> khoiPhucDocGia());
        btnTimKiem.addActionListener(e -> timKiemDocGia());
        
        // Thêm sự kiện cho bảng
        tblDocGia.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                hienThiChiTietDocGia();
            }
        });
    }
    
    private void loadDataToTable() {
        listDocGia = docGiaDAO.getList();
        DefaultTableModel model = (DefaultTableModel) tblDocGia.getModel();
        model.setRowCount(0);
        
        for (DocGiaDTO dg : listDocGia) {
            model.addRow(new Object[]{
                dg.getMaDG(),
                dg.getTenDG(),
                dg.getGioiTinh(),
                dg.getSoDienThoai(),
                tinhTuoi(dg.getNgaySinh()),
                dg.getDiaChi(),
                dg.getMaThe(),
                dg.getNgayCap() != null ? sdf.format(dg.getNgayCap()) : "",
                dg.getNgayHetHan() != null ? sdf.format(dg.getNgayHetHan()) : "",
                dg.isTrangThai() ? "Hoạt động" : "Đã khóa"
            });
        }
    }
    
    private int tinhTuoi(Date ngaySinh) {
        if (ngaySinh == null) return 0;
        return java.time.LocalDate.now().getYear() - 
               (ngaySinh.getYear() + 1900);
    }
    
    private void hienThiChiTietDocGia() {
        int selectedRow = tblDocGia.getSelectedRow();
        if (selectedRow >= 0) {
            DocGiaDTO dg = listDocGia.get(selectedRow);
            txtTenDocGia.setText(dg.getTenDG());
            cboGioiTinh.setSelectedItem(dg.getGioiTinh());
            txtSoDienThoai.setText(dg.getSoDienThoai());
            txtDiaChi.setText(dg.getDiaChi());
            txtMaThe.setText(dg.getMaThe());
            dateNgaySinh.setDate(dg.getNgaySinh());
            dateNgayCap.setDate(dg.getNgayCap());
            dateNgayHetHan.setDate(dg.getNgayHetHan());
        }
    }
    
    private void xoaDuLieuForm() {
        txtTenDocGia.setText("");
        txtSoDienThoai.setText("");
        txtDiaChi.setText("");
        txtMaThe.setText("");
        dateNgaySinh.setDate(null);
        dateNgayCap.setDate(null);
        dateNgayHetHan.setDate(null);
    }

    private void themDocGia() {
        try {
            DocGiaDTO dg = layThongTinForm();
            if (dg == null) return;
            
            // Kiểm tra xem dữ liệu đã tồn tại chưa
            String tenDG = dg.getTenDG();
            String soDienThoai = dg.getSoDienThoai();
            String diaChi = dg.getDiaChi();
            Date ngaySinh = dg.getNgaySinh();
            
            // Tìm kiếm trong danh sách hiện tại
            for (DocGiaDTO existingDocGia : listDocGia) {
                if (existingDocGia.getTenDG().equals(tenDG) && 
                    existingDocGia.getSoDienThoai().equals(soDienThoai) && 
                    existingDocGia.getDiaChi().equals(diaChi) && 
                    existingDocGia.getNgaySinh().equals(ngaySinh)) {
                    JOptionPane.showMessageDialog(this, "Thông tin độc giả đã tồn tại trong hệ thống!");
                    return;
                }
            }
            
            // Tạo mã độc giả mới
            dg.setMaDG("DG" + (listDocGia.size() + 1));
            dg.setTrangThai(true);
            
            if (docGiaDAO.add(dg)) {
                JOptionPane.showMessageDialog(this, "Thêm độc giả thành công!");
                loadDataToTable();
                xoaDuLieuForm();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm độc giả thất bại!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }
    
    private void capNhatDocGia() {
        try {
            int selectedRow = tblDocGia.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn độc giả cần cập nhật!");
                return;
            }
            
            DocGiaDTO dg = layThongTinForm();
            if (dg == null) return;
            
            dg.setMaDG(listDocGia.get(selectedRow).getMaDG());
            dg.setTrangThai(listDocGia.get(selectedRow).isTrangThai());
            
            if (docGiaDAO.update(dg)) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }
    
    private void xoaDocGia() {
        int selectedRow = tblDocGia.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn độc giả cần xóa!");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Bạn có chắc muốn xóa độc giả này?", 
                "Xác nhận xóa", 
                JOptionPane.YES_NO_OPTION);
                
        if (confirm == JOptionPane.YES_OPTION) {
            String maDG = listDocGia.get(selectedRow).getMaDG();
            if (docGiaDAO.delete(maDG)) {
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                // Cập nhật trạng thái trong listDocGia
                listDocGia.get(selectedRow).setTrangThai(false);
                // Cập nhật hiển thị trong bảng
                DefaultTableModel model = (DefaultTableModel) tblDocGia.getModel();
                model.setValueAt("Đã khóa", selectedRow, 9); // 9 là cột trạng thái
                xoaDuLieuForm();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại!");
            }
        }
    }
    
    private void khoiPhucDocGia() {
        int selectedRow = tblDocGia.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn độc giả cần khôi phục!");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Bạn có chắc muốn khôi phục độc giả này?", 
                "Xác nhận khôi phục", 
                JOptionPane.YES_NO_OPTION);
                
        if (confirm == JOptionPane.YES_OPTION) {
            String maDG = listDocGia.get(selectedRow).getMaDG();
            if (docGiaDAO.restore(maDG)) {
                JOptionPane.showMessageDialog(this, "Khôi phục thành công!");
                // Cập nhật trạng thái trong listDocGia
                listDocGia.get(selectedRow).setTrangThai(true);
                // Cập nhật hiển thị trong bảng
                DefaultTableModel model = (DefaultTableModel) tblDocGia.getModel();
                model.setValueAt("Hoạt động", selectedRow, 9); // 9 là cột trạng thái
                xoaDuLieuForm();
            } else {
                JOptionPane.showMessageDialog(this, "Khôi phục thất bại!");
            }
        }
    }
    
    private void timKiemDocGia() {
        String keyword = txtTimKiem.getText().trim();
        String selectedOption = (String) cboTimKiem.getSelectedItem();
        
        if (!keyword.isEmpty()) {
            listDocGia = docGiaDAO.search(keyword, selectedOption);
            DefaultTableModel model = (DefaultTableModel) tblDocGia.getModel();
            model.setRowCount(0);
            
            for (DocGiaDTO dg : listDocGia) {
                model.addRow(new Object[]{
                    dg.getMaDG(),
                    dg.getTenDG(),
                    dg.getGioiTinh(),
                    dg.getSoDienThoai(),
                    tinhTuoi(dg.getNgaySinh()),
                    dg.getDiaChi(),
                    dg.getMaThe(),
                    dg.getNgayCap() != null ? sdf.format(dg.getNgayCap()) : "",
                    dg.getNgayHetHan() != null ? sdf.format(dg.getNgayHetHan()) : "",
                    dg.isTrangThai() ? "Hoạt động" : "Đã khóa"
                });
            }
        } else {
            loadDataToTable();
        }
    }
    
    private DocGiaDTO layThongTinForm() {
        String tenDG = txtTenDocGia.getText().trim();
        String gioiTinh = (String) cboGioiTinh.getSelectedItem();
        String sdt = txtSoDienThoai.getText().trim();
        String diaChi = txtDiaChi.getText().trim();
        String maThe = txtMaThe.getText().trim();
        Date ngaySinh = dateNgaySinh.getDate();
        Date ngayCap = dateNgayCap.getDate();
        Date ngayHetHan = dateNgayHetHan.getDate();
        
        if (tenDG.isEmpty() || ngaySinh == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin bắt buộc (Tên và Ngày sinh)!");
            return null;
        }
        
        // Nếu có mã thẻ thì phải có ngày cấp và ngày hết hạn
        if (maThe != null && !maThe.trim().isEmpty()) {
            if (ngayCap == null || ngayHetHan == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin thẻ (Ngày cấp và Ngày hết hạn)!");
                return null;
            }
        }
        
        return new DocGiaDTO("", tenDG, gioiTinh, sdt, ngaySinh, diaChi, 
                maThe, ngayCap, ngayHetHan, true);
    }
    
    

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocgiaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            JFrame frame = new JFrame("Quản lý độc giả");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.add(new DocgiaGUI());
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnKhoiPhuc;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboGioiTinh;
    private javax.swing.JComboBox<String> cboTimKiem;
    private com.toedter.calendar.JDateChooser dateNgayCap;
    private com.toedter.calendar.JDateChooser dateNgayHetHan;
    private com.toedter.calendar.JDateChooser dateNgaySinh;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblMaThe;
    private javax.swing.JLabel lblNgayCap;
    private javax.swing.JLabel lblNgayHetHan;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblSoDienThoai;
    private javax.swing.JLabel lblTenDocGia;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JScrollPane scrTable;
    private javax.swing.JTable tblDocGia;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaThe;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenDocGia;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
